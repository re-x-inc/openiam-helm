apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.openiam.appname }}-ui
  labels:
    openiam_collect_logs: 'true'
{{ include "labels.standard" . | indent 4 }}
spec:
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      app: {{ .Values.openiam.appname }}-ui
  serviceName: {{ .Values.openiam.appname }}-ui
  replicas: {{ required "openiam.ui.replicas is required" .Values.openiam.ui.replicas }}
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
      {{- if .Values.openiam.ui.podAnnotations }}
{{ toYaml .Values.openiam.ui.podAnnotations | indent 8 }}
      {{- end }}
      labels:
        release: {{ .Release.Name }}
        app: {{ .Values.openiam.appname }}-ui
        openiam_collect_logs: 'true'
        {{- range $key, $value := .Values.openiam.ui.labels }}
        {{ $key }}: {{ $value }}
        {{- end }}
    spec:
      {{- if .Values.openiam.ui.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.openiam.ui.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.openiam.ui.hostAliases }}
      hostAliases:
{{ toYaml .Values.openiam.ui.hostAliases | indent 8 }}
      {{- end }}
      {{- if .Values.openiam.ui.tolerations }}
      tolerations:
{{ toYaml .Values.openiam.ui.tolerations | indent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Values.openiam.appname }}-ui
            topologyKey: "kubernetes.io/hostname"
      securityContext:
{{ toYaml .Values.openiam.ui.securityContext | indent 8 }}
      imagePullSecrets:
      - name: myregistrykey
      containers:
      - name: ui
        image: "{{ .Values.openiam.image.registry }}{{ .Values.openiam.image.registryPrefixSeparator }}{{ .Values.openiam.image.prefix }}/nginx:{{ .Values.openiam.image.version }}-{{ .Values.openiam.image.environment }}"
        imagePullPolicy: {{ .Values.openiam.image.pullPolicy }}
        env:
        - name: TZ
          value: {{ .Values.global.timezone | quote }}
        readinessProbe:
          exec:
            command: ['/bin/sh', '-c', 'wget -O /dev/null http://localhost || exit 1']
          initialDelaySeconds: 240
          timeoutSeconds: 120
          periodSeconds: 60
          failureThreshold: 6
        livenessProbe:
          exec:
            command: ['/bin/sh', '-c', 'wget -O /dev/null http://localhost || exit 1']
          initialDelaySeconds: 240
          timeoutSeconds: 120
          periodSeconds: 60
          failureThreshold: 6
        resources:
{{ toYaml .Values.openiam.ui.resources | indent 10 }}
        ports:
        - name: ui
          containerPort: 8080
